---
  - name: Setup Java Installation
    shell: "{{item}}"
    tags: javasetupinst
    with_items:
       - echo deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main | tee -a /etc/apt/sources.list
       - echo deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main | tee -a /etc/apt/sources.list
       - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886
       - apt-get update
       - echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections

  - name: Install Java
    shell: "{{item}}"
    tags: javainstall
    with_items:
       - apt-get install -y oracle-java7-installer
       - apt-get install -y oracle-java7-set-default 

  - name: Disable ipv6
    sysctl: "name={{item.name}} value={{item.value}} state={{item.state}}"
    tags: disableipv6
    with_items:
       - { name: 'net.ipv6.conf.all.disable_ipv6', value: '1', state: 'present' }
       - { name: 'net.ipv6.conf.default.disable_ipv6', value: '1', state: 'present' }
       - { name: 'net.ipv6.conf.lo.disable_ipv6', value: '1', state: 'present' }

  - name: Remove second line of /etc/hosts
    lineinfile: dest=/etc/hosts regexp='^127\.0\.1\.1' state=absent
    tags: edithosts1

  - name: Add virtual machine private ips in /etc/hosts
    template: src=hosts.j2 dest={{etchosts_filename}}
    tags: edithosts2

  - name: Append the host file
    shell: cat {{etchosts_filename}} >> /etc/hosts
    tags: edithosts3

  - name: create hadoop group
    group: name=hadoop state=present
    tags: hdgroup

  - name: create hadoop user
    user: name=hduser group=hadoop generate_ssh_key=yes shell=/bin/bash
    tags: hduser

  - name: copy authorized_keys to hduser .ssh directory
    tags: copyauth
    copy: src=~/.ssh/id_rsa.pub dest=~hduser/.ssh/authorized_keys owner=hduser group=hadoop mode=0600

  - name: Change ssh_config to ssh from master with no StrictHostKeyCheck,command1
    lineinfile: dest=/etc/ssh/ssh_config regexp='ask' line='StrictHostKeyChecking no' state=present
    tags: sshconfig1
    when: is_master

  - name: Change ssh_config to ssh from master with no StrictHostKeyCheck,command2
    lineinfile: dest=/etc/ssh/ssh_config line='UserKnownHostsFile=/dev/null' insertafter='EOF' state=present
    tags: sshconfig2
    when: is_master
 
  - name: prepare ssh 
    tags: preparessh
    shell: sudo -u hduser cat /home/hduser/.ssh/id_rsa.pub >> /home/hduser/.ssh/authorized_keys
    when: is_master

  - name: copy master public ssh key to local box
    tags: copymasterssh
    local_action: command  scp -v -o StrictHostKeyChecking=no root@{{ hostvars[groups['master'][0]].inventory_hostname }}:/home/hduser/.ssh/id_rsa.pub ./roles/hadoop/files/master_id_rsa_pub
    when: is_master

  - name: copy local box master ssh key to hduser
    tags: slavessh
    authorized_key: user=hduser key="{{ lookup('file', 'master_id_rsa_pub') }}"
    when: is_slave
    
  - name: download hadoop src
    tags: downloadhadoopes
    get_url: dest=/usr/local url={{ hadoop_common_url }}/{{ hadoop_version }}/{{ hadoop_version }}.tar.gz

  - name: unzip hadoop src
    tags: unzip
    command: tar -xzf {{ hadoop_version }}.tar.gz chdir=/usr/local

  - name: chown hadoop-src from root to hadoop group
    tags: chown
    action: |
      command /bin/sh -c '
      cd /usr/local
      mv {{ hadoop_version }} hadoop
      chown -R hduser:hadoop hadoop'

  - name: update ~/.bashrc and hadoop-env.sh files
    tags: bashhadoop
    lineinfile: "dest={{item.dest}} state={{item.state}} insertafter={{item.insertafter}} line={{item.line}}"
    with_items:
      - { dest: '/home/hduser/.bashrc', state: 'present', insertafter: 'EOF', line: "'{{ lookup('file', 'conf_bashrc') }}'"}
      - { dest: '/usr/local/hadoop/etc/hadoop/hadoop-env.sh', state: 'present', insertafter: 'EOF', line: '"export JAVA_HOME=/usr/lib/jvm/java-7-oracle"' }

  - name: create app/hadoop/tmp to store HDFS
    tags: tmp
    action: |
      command /bin/sh -c '
      mkdir -p /app/hadoop/tmp
      chown hduser:hadoop /app/hadoop/tmp
      chmod 750 /app/hadoop/tmp'

  - name: copy hadoop configuration xml files in every node
    tags: configurexmlfiles
    template: "src={{item.src}} dest={{item.dest}}"
    with_items: 
      - { src: 'core-site.j2', dest: '/usr/local/hadoop/conf/core-site.xml'}
      - { src: 'mapred-site.j2', dest: '/usr/local/hadoop/conf/mapred-site.xml' }
      - { src: 'hdfs-site.j2', dest: '/usr/local/hadoop/conf/hdfs-site.xml'}
 
  - name: create masters and slaves files in hadoop master node
    tags: mastersslaves
    template: "src={{item.src}} dest={{item.dest}} owner={{item.owner}} group={{item.group}}"
    with_items: 
      - { src: 'masters.j2', dest: '/usr/local/hadoop/conf/masters', owner: 'hduser', group: 'hadoop' }
      - { src: 'slaves.j2', dest: '/usr/local/hadoop/conf/slaves', owner: 'hduser', group: 'hadoop' }
    when: is_master
