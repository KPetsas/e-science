---
  - name: format hdfs
    tags: format
    command: sudo -u hdfs hdfs namenode -format -force chdir={{ cloudera_bin }}
    when: is_master

  - name: start Namenode, Resource Manager and History Server
    tags: start
    service: "name={{item.name}} state={{item.state}}"
    with_items:
      - { name: 'hadoop-hdfs-namenode', state: 'started' }
      - { name: 'hadoop-yarn-resourcemanager',  state: 'started' }
      - { name: 'hadoop-mapreduce-historyserver', state: 'started' }
    when: is_master

  - name: start Datanode and Node Manager
    tags: start
    service: "name={{item.name}} state={{item.state}}"
    with_items:
      - { name: 'hadoop-hdfs-datanode', state: 'started' }
      - { name: 'hadoop-yarn-nodemanager',  state: 'started' }
    when: is_slave

  - name: Create mandatory directories in Hdfs
    tags: HDFSMkdir
    action: command {{item}} chdir={{ cloudera_bin }}
    with_items:
      - sudo -u hdfs hadoop fs -mkdir -p /user/yarn
      - sudo -u hdfs hadoop fs -chown yarn /user/yarn
      - sudo -u hdfs hadoop fs -mkdir -p /user/mapred
      - sudo -u hdfs hadoop fs -chown mapred /user/mapred
      - sudo -u hdfs hadoop fs -mkdir -p /user/hdfs
      - sudo -u hdfs hadoop fs -chown hdfs /user/hdfs
      - sudo -u hdfs hadoop fs -mkdir /tmp
      - sudo -u hdfs hadoop fs -chmod -R 1777 /tmp
      - sudo -u hdfs hadoop fs -mkdir -p /user/history
      - sudo -u hdfs hadoop fs -chmod -R 1777 /user/history
      - sudo -u hdfs hadoop fs -chown mapred:hadoop /user/history
      - sudo -u hdfs hadoop fs -mkdir -p /var/log/hadoop-yarn
      - sudo -u hdfs hadoop fs -chown yarn:mapred /var/log/hadoop-yarn
      - sudo -u hdfs hadoop fs -mkdir -p /user/spark/applicationHistory
      - sudo -u hdfs hadoop fs -chown -R spark:spark /user/spark
      - sudo -u hdfs hadoop fs -chmod 1777 /user/spark/applicationHistory
      - sudo -u hdfs hadoop fs -mkdir -p /user/hive/warehouse
      - sudo -u hdfs hadoop fs -chmod 1777 /user/hive/warehouse
      - sudo -u hdfs hadoop fs -mkdir -p /user/oozie
      - sudo -u hdfs hadoop fs -chown oozie:oozie /user/oozie
      - sudo -u hdfs hadoop fs -mkdir -p /var/log/oozie
      - sudo -u hdfs hadoop fs -chown oozie:oozie /var/log/oozie
    when: is_master

  - name: stop Namenode, Resource Manager and History Server
    tags: stop
    service: "name={{item.name}} state={{item.state}}"
    with_items:
      - { name: 'hadoop-hdfs-namenode', state: 'stopped' }
      - { name: 'hadoop-yarn-resourcemanager',  state: 'stopped' }
      - { name: 'hadoop-mapreduce-historyserver', state: 'stopped' }
    when: is_master

  - name: stop Datanode and Node Manager
    tags: stop
    service: "name={{item.name}} state={{item.state}}"
    with_items:
      - { name: 'hadoop-hdfs-datanode', state: 'stopped' }
      - { name: 'hadoop-yarn-nodemanager',  state: 'stopped' }
    when: is_slave

  - name: start Hbase in cloudera cluster
    tags: CLOUDstart
    service: "name={{item.name}} state={{item.state}}"
    with_items:
      - { name: 'hue', state: 'started' }
      - { name: 'hbase-master', state: 'started' }
      - { name: 'hbase-thrift', state: 'started' }
      - { name: 'hbase-rest', state: 'started' }
      - { name: 'spark-master', state: 'started' }
      - { name: 'spark-history-server', state: 'started' }
      - { name: 'oozie', state: 'started' }
      - { name: 'hive-metastore', state: 'started' }
      - { name: 'hive-server2', state: 'started' }
    when: is_master

  - name: start Hbase regionservers in cloudera cluster
    tags: CLOUDstart
    service: "name={{item.name}} state={{item.state}}"
    with_items:
      - { name: 'spark-worker', state: 'started' }
      - { name: 'hbase-regionserver', state: 'started' }
    when: is_slave

  - name: start Hue livy server in cloudera cluster
    tags: Livystart
    shell: /usr/lib/hue/build/env/bin/hue  livy_server > /dev/null 2>&1 &
    when: is_master